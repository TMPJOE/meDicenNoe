{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Flia. Rodriguez\\\\Desktop\\\\mecanica-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport CanvasDraw from 'react-canvas-draw';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const firstCanvas = useRef(null);\n  const [images, setImages] = useState([]);\n  const [selectedImageIndex, setSelectedImageIndex] = useState(null);\n  const [dragStartPos, setDragStartPos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [dragging, setDragging] = useState(false);\n  useEffect(() => {\n    const handlePaste = event => {\n      const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n      for (let index in items) {\n        const item = items[index];\n        if (item.kind === 'file') {\n          const blob = item.getAsFile();\n          const reader = new FileReader();\n          reader.onload = e => {\n            setImages(prevImages => [...prevImages, {\n              src: e.target.result,\n              x: 900,\n              y: 0\n            }]);\n          };\n          reader.readAsDataURL(blob);\n        }\n      }\n    };\n    document.addEventListener('paste', handlePaste);\n    return () => {\n      document.removeEventListener('paste', handlePaste);\n    };\n  }, []);\n  const handleMouseDown = (event, index) => {\n    setSelectedImageIndex(index);\n    setDragStartPos({\n      x: event.clientX,\n      y: event.clientY\n    });\n    setDragging(true);\n  };\n  const handleMouseMove = event => {\n    if (dragging && selectedImageIndex !== null) {\n      const deltaX = event.clientX - dragStartPos.x;\n      const deltaY = event.clientY - dragStartPos.y;\n      setImages(prevImages => {\n        const updatedImages = [...prevImages];\n        updatedImages[selectedImageIndex].x += deltaX;\n        updatedImages[selectedImageIndex].y += deltaY;\n        return updatedImages;\n      });\n      setDragStartPos({\n        x: event.clientX,\n        y: event.clientY\n      });\n    }\n  };\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n  const clear = () => {\n    firstCanvas.current.clear();\n    setImages([]);\n  };\n  const undo = () => {\n    firstCanvas.current.undo();\n  };\n  const downloadWithBlankBackground = () => {\n    const canvas = firstCanvas.current.canvas.drawing;\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = canvas.width;\n    tempCanvas.height = canvas.height;\n    const tempCtx = tempCanvas.getContext('2d');\n\n    // Dibujar fondo blanco en el canvas temporal\n    tempCtx.fillStyle = '#ffffff'; // Color blanco\n    tempCtx.fillRect(0, 0, tempCanvas.width, tempCanvas.height);\n\n    // Dibujar el contenido del lienzo en el canvas temporal\n    tempCtx.drawImage(canvas, 0, 0);\n\n    // Dibujar las imÃ¡genes en el canvas temporal\n    images.forEach(image => {\n      const img = new Image();\n      img.src = image.src;\n      tempCtx.drawImage(img, image.x, image.y);\n    });\n\n    // Convertir el canvas temporal en una URL de datos en formato PNG\n    const dataURL = tempCanvas.toDataURL('image/png');\n\n    // Descargar la imagen\n    downloadDataURL(dataURL, 'tablero.png');\n  };\n  const downloadDataURL = (dataURL, filename) => {\n    const link = document.createElement('a');\n    link.href = dataURL;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 10,\n        left: 10,\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clear,\n        children: \"Limpiar Dibujo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: undo,\n        children: \"Deshacer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadWithBlankBackground,\n        children: \"Descargar imagen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%'\n      },\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CanvasDraw, {\n      brushRadius: 3,\n      brushColor: \"red\" // Color del pincel\n      ,\n      canvasWidth: 1500 // Ancho del lienzo\n      ,\n      canvasHeight: 1000 // Alto del lienzo\n      ,\n      hideGrid: false,\n      style: {\n        border: '1px solid black'\n      },\n      ref: firstCanvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image.src,\n      alt: \"pasted\",\n      style: {\n        position: 'absolute',\n        left: image.x,\n        top: image.y,\n        cursor: 'pointer',\n        border: selectedImageIndex === index ? '2px solid blue' : 'none'\n      },\n      onMouseDown: event => handleMouseDown(event, index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1v252Z6GbwpDPQqjHVGguPzNcV0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","useState","CanvasDraw","jsxDEV","_jsxDEV","App","_s","firstCanvas","images","setImages","selectedImageIndex","setSelectedImageIndex","dragStartPos","setDragStartPos","x","y","dragging","setDragging","handlePaste","event","items","clipboardData","originalEvent","index","item","kind","blob","getAsFile","reader","FileReader","onload","e","prevImages","src","target","result","readAsDataURL","document","addEventListener","removeEventListener","handleMouseDown","clientX","clientY","handleMouseMove","deltaX","deltaY","updatedImages","handleMouseUp","clear","current","undo","downloadWithBlankBackground","canvas","drawing","tempCanvas","createElement","width","height","tempCtx","getContext","fillStyle","fillRect","drawImage","forEach","image","img","Image","dataURL","toDataURL","downloadDataURL","filename","link","href","download","body","appendChild","click","removeChild","style","position","children","top","left","zIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onMouseMove","onMouseUp","brushRadius","brushColor","canvasWidth","canvasHeight","hideGrid","border","ref","map","alt","cursor","onMouseDown","_c","$RefreshReg$"],"sources":["C:/Users/Flia. Rodriguez/Desktop/mecanica-app/src/App.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport CanvasDraw from 'react-canvas-draw';\nimport \"./App.css\";\n\nfunction App() {\n  const firstCanvas = useRef(null);\n  const [images, setImages] = useState([]);\n  const [selectedImageIndex, setSelectedImageIndex] = useState(null);\n  const [dragStartPos, setDragStartPos] = useState({ x: 0, y: 0 });\n  const [dragging, setDragging] = useState(false);\n\n  useEffect(() => {\n    const handlePaste = (event) => {\n      const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n      for (let index in items) {\n        const item = items[index];\n        if (item.kind === 'file') {\n          const blob = item.getAsFile();\n          const reader = new FileReader();\n          reader.onload = (e) => {\n            setImages(prevImages => [...prevImages, { src: e.target.result, x: 900, y: 0 }]);\n          };\n          reader.readAsDataURL(blob);\n        }\n      }\n    };\n\n    document.addEventListener('paste', handlePaste);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste);\n    };\n  }, []);\n\n  const handleMouseDown = (event, index) => {\n    setSelectedImageIndex(index);\n    setDragStartPos({ x: event.clientX, y: event.clientY });\n    setDragging(true);\n  };\n\n  const handleMouseMove = (event) => {\n    if (dragging && selectedImageIndex !== null) {\n      const deltaX = event.clientX - dragStartPos.x;\n      const deltaY = event.clientY - dragStartPos.y;\n      setImages(prevImages => {\n        const updatedImages = [...prevImages];\n        updatedImages[selectedImageIndex].x += deltaX;\n        updatedImages[selectedImageIndex].y += deltaY;\n        return updatedImages;\n      });\n      setDragStartPos({ x: event.clientX, y: event.clientY });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setDragging(false);\n  };\n\n  const clear = () => {\n    firstCanvas.current.clear();\n    setImages([]);\n  };\n\n  const undo = () => {\n    firstCanvas.current.undo();\n  };\n\n  const downloadWithBlankBackground = () => {\n    const canvas = firstCanvas.current.canvas.drawing;\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = canvas.width;\n    tempCanvas.height = canvas.height;\n    const tempCtx = tempCanvas.getContext('2d');\n\n    // Dibujar fondo blanco en el canvas temporal\n    tempCtx.fillStyle = '#ffffff'; // Color blanco\n    tempCtx.fillRect(0, 0, tempCanvas.width, tempCanvas.height);\n\n    // Dibujar el contenido del lienzo en el canvas temporal\n    tempCtx.drawImage(canvas, 0, 0);\n\n    // Dibujar las imÃ¡genes en el canvas temporal\n    images.forEach(image => {\n      const img = new Image();\n      img.src = image.src;\n      tempCtx.drawImage(img, image.x, image.y);\n    });\n\n    // Convertir el canvas temporal en una URL de datos en formato PNG\n    const dataURL = tempCanvas.toDataURL('image/png');\n\n    // Descargar la imagen\n    downloadDataURL(dataURL, 'tablero.png');\n  };\n\n  const downloadDataURL = (dataURL, filename) => {\n    const link = document.createElement('a');\n    link.href = dataURL;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <div\n        style={{\n          position: 'absolute',\n          top: 10,\n          left: 10,\n          zIndex: 1000\n        }}\n      >\n        <button onClick={clear}>\n          Limpiar Dibujo\n        </button>\n        <button onClick={undo}>\n          Deshacer\n        </button>\n        <button onClick={downloadWithBlankBackground}>\n          Descargar imagen\n        </button>\n      </div>\n      <div\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n        }}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      />\n      <CanvasDraw\n        brushRadius={3}\n        brushColor='red' // Color del pincel\n        canvasWidth={1500} // Ancho del lienzo\n        canvasHeight={1000} // Alto del lienzo\n        hideGrid={false}\n        style={{ border: '1px solid black' }}\n        ref={firstCanvas}\n      />\n      {images.map((image, index) => (\n        <img\n          key={index}\n          src={image.src}\n          alt=\"pasted\"\n          style={{\n            position: 'absolute',\n            left: image.x,\n            top: image.y,\n            cursor: 'pointer',\n            border: selectedImageIndex === index ? '2px solid blue' : 'none'\n          }}\n          onMouseDown={(event) => handleMouseDown(event, index)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}